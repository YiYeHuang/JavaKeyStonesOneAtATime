package leetcode.hashtable;

import leetcode.tag.level.Easy;
import leetcode.tag.type.BitManipulation;
import leetcode.tag.type.Hash;

/**
 * 389. Find the Difference
 *
 * Given two strings s and t which consist of only lowercase letters.
 *
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 *
 * Find the letter that was added in t.
 *
 * Example:
 *
 * Input:
 * s = "abcd"
 * t = "abcde"
 *
 * Output:
 * e
 *
 * Explanation:
 * 'e' is the letter that was added.
 */

@Easy
@Hash
@BitManipulation
public class FindTheDifference {

    /**
     * int[26] question, each word represent as one hash, then do diff
     */
    public static char findTheDifference(String s, String t) {

        int[] l1 = new int[26];

        for (int i = 0; i < s.length(); i++) {
            l1[s.charAt(i) - 'a']++;
        }
        for (int i = 0; i < t.length(); i++) {
            l1[t.charAt(i) - 'a']--;
        }

        char result = 0;
        for (int i = 0; i < l1.length; i++) {
            if (l1[i] != 0) {
                result = 'a';
                result += i;
                break;
            }
        }

        return result;
    }

    public char findTheDifferenceBIT(String s, String t) {
        char c = 0;
        for (int i = 0; i < s.length(); ++i) {
            c ^= s.charAt(i);
        }
        for (int i = 0; i < t.length(); ++i) {
            c ^= t.charAt(i);
        }
        return c;
    }

    public static void main(String[] args) {
        findTheDifference("abcd", "abcde");
    }
}
